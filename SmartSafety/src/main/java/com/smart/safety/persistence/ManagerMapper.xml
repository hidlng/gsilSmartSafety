<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">




<mapper namespace="com.smart.safety.persistence.ManagerMapper">

	<select id="getManagerListByVO" resultType="ManagerVO"	parameterType="ManagerVO">
 	    SELECT
			M.*, U.*
		FROM MANAGER_LIST M
		JOIN USER_LIST U
		ON M.USER_IDX = U.USER_IDX
		
		WHERE 
			M.DELYN='N'  
			AND U.DELYN='N' 
			AND (
			U.ID like #{id}
			OR M.NAME like #{name}
			OR M.POSITION like #{position}
			OR M.GRADE like #{grade}
			OR M.PHONE like #{phone}
			)AND U.LEVEL like #{level}
			AND M.ISMANAGER = #{ismanager}
			AND M.SITE_IDX like #{site_idx}
		ORDER BY M.WRITETIME
		LIMIT #{start}, #{size}
    </select>
   	<select id="getRowCount" resultType="Integer" parameterType="ManagerVO">
	    SELECT
	    	COUNT(*)
		FROM MANAGER_LIST M
		JOIN USER_LIST U
		ON M.USER_IDX = U.USER_IDX
		WHERE 
			M.DELYN='N'
			AND U.DELYN='N'  
			AND (
			U.ID like #{id}
			OR M.NAME like #{name}
			OR M.POSITION like #{position}
			OR M.GRADE like #{grade}			
			OR M.PHONE like #{phone}
			)AND U.LEVEL like #{level}
			AND M.ISMANAGER = #{ismanager}
			AND M.SITE_IDX like #{site_idx}
    </select>
	
    
    <select id="getManagerByIdx" resultType="ManagerVO"	parameterType="String">
	 	SELECT
			M.*, U.*
		FROM MANAGER_LIST M
		JOIN USER_LIST U		
		ON M.USER_IDX = U.USER_IDX
		WHERE 
		 	M.DELYN='N'  
			AND U.DELYN='N'
			AND M.MANAGER_IDX=#{idx} 
	</select>
	
	<select id="getManagerByID" resultType="ManagerVO"	parameterType="String">
		SELECT
			*
		FROM MANAGER_LIST M
		JOIN USER_LIST U
		ON M.USER_IDX = U.USER_IDX 	 
		WHERE    
			M.DELYN='N'  
			AND U.DELYN='N' 
			AND U.ID = #{id}
		
	</select>
	
	<select id="getChiefByContIdx" resultType="ManagerVO" parameterType="hashmap">
		SELECT M.*, U.LEVEL
		FROM CONTRACTOR_LIST C
		JOIN MANAGER_LIST M
		JOIN USER_LIST U
		ON C.CONT_IDX = M.CONT_IDX
		AND M.USER_IDX = U.USER_IDX
		WHERE
		C.DELYN='N'
		AND M.DELYN='N'
		AND U.DELYN='N'
		AND C.CONT_IDX = #{cont_idx}
		AND U.LEVEL = #{level}
		
		LIMIT 0,1
	</select>
 	<select id="getManagerListBySiteIdx" resultType="ManagerVO"	parameterType="String">
 		SELECT *
 		FROM MANAGER_LIST M
 		JOIN USER_LIST U
 		ON M.USER_IDX = U.USER_IDX
 		WHERE 
 			M.DELYN = 'N'
 			AND U.DELYN = 'N'
 			AND M.SITE_IDX = #{site_idx}
 	</select>

	<insert id="insert" parameterType="ManagerVO">
		INSERT INTO
		MANAGER_LIST(MANAGER_IDX, USER_IDX, SITE_IDX, CONT_IDX, ISMANAGER, GRADE, NAME, BIRTH, PHONE, POSITION, WRITETIME, DELYN)
		VALUES( #{manager_idx},	#{user_idx},
			#{site_idx}, #{cont_idx}, #{ismanager}, #{grade}, #{name}, #{birth}, #{phone} , #{position}, sysdate() , 'N' )
	</insert>
	
 	<update id="update" parameterType="ManagerVO">
 	    UPDATE MANAGER_LIST
		SET SITE_IDX=#{site_idx}, CONT_IDX=#{cont_idx}, ISMANAGER = #{ismanager},  GRADE=#{grade}, NAME=#{name}, BIRTH=#{birth}, PHONE=#{phone}, POSITION=#{position}
		WHERE MANAGER_IDX=#{manager_idx}
    </update>
	
   	<update id="delete" parameterType="String">
		UPDATE MANAGER_LIST
		SET DELYN='Y'
		WHERE MANAGER_IDX = #{idx}
	</update>
   
</mapper>
